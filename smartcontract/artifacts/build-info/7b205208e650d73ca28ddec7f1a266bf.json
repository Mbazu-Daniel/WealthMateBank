{"id":"7b205208e650d73ca28ddec7f1a266bf","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/WealthMate.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n@author Mbazu Ifeanyichukwu Daniel\r\n@dev Grandida bank\r\n\r\n*/\r\n\r\ncontract WealthMate {\r\n    using SafeMath for uint;\r\n\r\n    // State Variables\r\n    address public owner; // address of the owner of the bank\r\n\r\n    // Mapping to store customer balances\r\n    mapping(address => uint) public balances;\r\n\r\n    // Events\r\n    event Deposit(address indexed customerAddress, uint depositAmount); // emitted when a customer deposits tokens\r\n    event Withdraw(\r\n        address indexed customerAddress,\r\n        uint withdrawAmount,\r\n        uint newBalance\r\n    ); // emitted when a customer withdraws tokens\r\n    event Transfer(address from, address to, uint transferAmount); // emitted when a customer transfers tokens to another account\r\n\r\n    // MODIFIERS\r\n    modifier onlyOwner() {\r\n        // modifier to restrict certain functions to only be callable by the owner of the bank\r\n        require(msg.sender == owner, \"You're not the owner of the bank\");\r\n        _;\r\n    }\r\n\r\n    // Constructor\r\n    constructor() {\r\n        owner = msg.sender; // set the owner of the bank to the address that deployed the contract\r\n    }\r\n\r\n    // Fallback and Receive function\r\n    receive() external payable {} // allow the contract to receive ether\r\n\r\n    fallback() external payable {} // allow the contract to receive tokens\r\n\r\n    /// @dev Get balance of customer\r\n    function getCustomerBalance() external view returns (uint) {\r\n        // return the balance of the customer calling the function\r\n        return balances[msg.sender];\r\n    }\r\n\r\n    /// @notice deposit token into the bank\r\n    function depositToken() external payable {\r\n        // you cannot deposit 0 amount\r\n        require(msg.value != 0, \"You don't have enough token to deposit\");\r\n\r\n        // Use SafeMath's add function to prevent overflow\r\n        balances[msg.sender] = balances[msg.sender].add(msg.value);\r\n\r\n        // log event of the deposit made\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    /// @dev customer withdraw token back to account\r\n    function withdrawToken(\r\n        address payable receiver,\r\n        uint withdrawAmount\r\n    ) external {\r\n        // check that the customer has sufficient funds\r\n        require(withdrawAmount <= balances[msg.sender], \"insufficient funds\");\r\n\r\n        // Use SafeMath's sub function to prevent underflow\r\n        balances[msg.sender] = balances[msg.sender].sub(withdrawAmount);\r\n\r\n        // transfer token from the bankAddress to the customer\r\n        receiver.transfer(withdrawAmount);\r\n\r\n        // log event of the withdrawal made\r\n        emit Withdraw(msg.sender, withdrawAmount, balances[msg.sender]);\r\n    }\r\n\r\n    /// @dev send token to another account from your bank balances\r\n    function transferToken(\r\n        address to,\r\n        uint transferAmount\r\n    ) external payable returns (bool) {\r\n        // check that the customer has sufficient funds\r\n        require(balances[msg.sender] >= transferAmount, \"insufficient funds\");\r\n\r\n        // Use SafeMath's sub function to prevent underflow\r\n        balances[msg.sender] = balances[msg.sender].sub(transferAmount);\r\n\r\n        // transfer token from the bankAddress to the customer\r\n        (bool success, ) = to.call{value: transferAmount}(\"\");\r\n        require(success, \"Call failed\");\r\n\r\n        // add transferred amount to receivers account\r\n        balances[to] = balances[to].add(transferAmount);\r\n\r\n        // log event of the transfer made\r\n        emit Transfer(msg.sender, to, transferAmount);\r\n        return true;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[311]},"id":312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"285:196:0","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":311,"linearizedBaseContracts":[311],"name":"SafeMath","nameLocation":"490:8:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":33,"nodeType":"Block","src":"717:140:0","statements":[{"id":32,"nodeType":"UncheckedBlock","src":"727:124:0","statements":[{"assignments":[15],"declarations":[{"constant":false,"id":15,"mutability":"mutable","name":"c","nameLocation":"759:1:0","nodeType":"VariableDeclaration","scope":32,"src":"751:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":19,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"763:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":17,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"767:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":20,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"786:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":21,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"790:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":27,"nodeType":"IfStatement","src":"782:28:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":25,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":13,"id":26,"nodeType":"Return","src":"793:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":29,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"838:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":30,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":13,"id":31,"nodeType":"Return","src":"824:16:0"}]}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"505:131:0","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":34,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"a","nameLocation":"665:1:0","nodeType":"VariableDeclaration","scope":34,"src":"657:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"b","nameLocation":"676:1:0","nodeType":"VariableDeclaration","scope":34,"src":"668:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:0"},"returnParameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"702:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"708:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:0"},"scope":311,"src":"641:216:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":61,"nodeType":"Block","src":"1078:113:0","statements":[{"id":60,"nodeType":"UncheckedBlock","src":"1088:97:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":46,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1116:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":47,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1120:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":53,"nodeType":"IfStatement","src":"1112:28:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":49,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":51,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":45,"id":52,"nodeType":"Return","src":"1123:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":55,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1168:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":56,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1172:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":58,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":45,"id":59,"nodeType":"Return","src":"1154:20:0"}]}]},"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"863:134:0","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":62,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"a","nameLocation":"1026:1:0","nodeType":"VariableDeclaration","scope":62,"src":"1018:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"b","nameLocation":"1037:1:0","nodeType":"VariableDeclaration","scope":62,"src":"1029:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"1063:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"1069:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:0"},"scope":311,"src":"1002:189:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":103,"nodeType":"Block","src":"1415:417:0","statements":[{"id":102,"nodeType":"UncheckedBlock","src":"1425:401:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":74,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1683:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":81,"nodeType":"IfStatement","src":"1679:28:0","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":79,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":73,"id":80,"nodeType":"Return","src":"1691:16:0"}},{"assignments":[83],"declarations":[{"constant":false,"id":83,"mutability":"mutable","name":"c","nameLocation":"1729:1:0","nodeType":"VariableDeclaration","scope":102,"src":"1721:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":87,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":84,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1733:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":85,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1737:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":88,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1756:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":89,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1760:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":91,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1765:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97,"nodeType":"IfStatement","src":"1752:33:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":95,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":73,"id":96,"nodeType":"Return","src":"1768:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":99,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1813:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":73,"id":101,"nodeType":"Return","src":"1799:16:0"}]}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"1197:137:0","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":104,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"a","nameLocation":"1363:1:0","nodeType":"VariableDeclaration","scope":104,"src":"1355:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"b","nameLocation":"1374:1:0","nodeType":"VariableDeclaration","scope":104,"src":"1366:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":104,"src":"1400:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":104,"src":"1406:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:0"},"scope":311,"src":"1339:493:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":131,"nodeType":"Block","src":"2057:114:0","statements":[{"id":130,"nodeType":"UncheckedBlock","src":"2067:98:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":116,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2095:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":123,"nodeType":"IfStatement","src":"2091:29:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":115,"id":122,"nodeType":"Return","src":"2103:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"2148:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2152:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":115,"id":129,"nodeType":"Return","src":"2134:20:0"}]}]},"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"1838:138:0","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":132,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"a","nameLocation":"2005:1:0","nodeType":"VariableDeclaration","scope":132,"src":"1997:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"b","nameLocation":"2016:1:0","nodeType":"VariableDeclaration","scope":132,"src":"2008:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:0"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":132,"src":"2042:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":132,"src":"2048:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:0"},"scope":311,"src":"1981:190:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":159,"nodeType":"Block","src":"2406:114:0","statements":[{"id":158,"nodeType":"UncheckedBlock","src":"2416:98:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2444:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":151,"nodeType":"IfStatement","src":"2440:29:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":143,"id":150,"nodeType":"Return","src":"2452:17:0"}},{"expression":{"components":[{"hexValue":"74727565","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2497:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2501:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":143,"id":157,"nodeType":"Return","src":"2483:20:0"}]}]},"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"2177:148:0","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":160,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:0","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"a","nameLocation":"2354:1:0","nodeType":"VariableDeclaration","scope":160,"src":"2346:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"b","nameLocation":"2365:1:0","nodeType":"VariableDeclaration","scope":160,"src":"2357:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"2391:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"2397:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:0"},"scope":311,"src":"2330:190:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":174,"nodeType":"Block","src":"2822:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"2839:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":171,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2843:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":169,"id":173,"nodeType":"Return","src":"2832:12:0"}]},"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"2526:224:0","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":175,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:0","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"a","nameLocation":"2776:1:0","nodeType":"VariableDeclaration","scope":175,"src":"2768:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"b","nameLocation":"2787:1:0","nodeType":"VariableDeclaration","scope":175,"src":"2779:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":175,"src":"2813:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:0"},"scope":311,"src":"2755:96:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"3189:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"3206:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":186,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3210:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":184,"id":188,"nodeType":"Return","src":"3199:12:0"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"2857:260:0","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":190,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:0","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"a","nameLocation":"3143:1:0","nodeType":"VariableDeclaration","scope":190,"src":"3135:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"b","nameLocation":"3154:1:0","nodeType":"VariableDeclaration","scope":190,"src":"3146:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:0"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":190,"src":"3180:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:0"},"scope":311,"src":"3122:96:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":204,"nodeType":"Block","src":"3532:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3549:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":201,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3553:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":199,"id":203,"nodeType":"Return","src":"3542:12:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"3224:236:0","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":205,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"a","nameLocation":"3486:1:0","nodeType":"VariableDeclaration","scope":205,"src":"3478:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"b","nameLocation":"3497:1:0","nodeType":"VariableDeclaration","scope":205,"src":"3489:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:0"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":205,"src":"3523:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:0"},"scope":311,"src":"3465:96:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":219,"nodeType":"Block","src":"3917:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"3934:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":216,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"3938:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":214,"id":218,"nodeType":"Return","src":"3927:12:0"}]},"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"3567:278:0","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":220,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:0","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"a","nameLocation":"3871:1:0","nodeType":"VariableDeclaration","scope":220,"src":"3863:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"b","nameLocation":"3882:1:0","nodeType":"VariableDeclaration","scope":220,"src":"3874:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:0"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"3908:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:0"},"scope":311,"src":"3850:96:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":234,"nodeType":"Block","src":"4466:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"4483:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":231,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"4487:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":229,"id":233,"nodeType":"Return","src":"4476:12:0"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"3952:442:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":235,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:0","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"a","nameLocation":"4420:1:0","nodeType":"VariableDeclaration","scope":235,"src":"4412:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"b","nameLocation":"4431:1:0","nodeType":"VariableDeclaration","scope":235,"src":"4423:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:0"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":235,"src":"4457:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:0"},"scope":311,"src":"4399:96:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":259,"nodeType":"Block","src":"5084:106:0","statements":[{"id":258,"nodeType":"UncheckedBlock","src":"5094:90:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"5126:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":249,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"5131:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":251,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"5134:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"ExpressionStatement","src":"5118:29:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"5168:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"5172:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":246,"id":257,"nodeType":"Return","src":"5161:12:0"}]}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"4501:453:0","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":260,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:0","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"a","nameLocation":"4989:1:0","nodeType":"VariableDeclaration","scope":260,"src":"4981:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"b","nameLocation":"5008:1:0","nodeType":"VariableDeclaration","scope":260,"src":"5000:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:0","nodeType":"VariableDeclaration","scope":260,"src":"5019:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":241,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:0"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":260,"src":"5075:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:0"},"scope":311,"src":"4959:231:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"5799:105:0","statements":[{"id":283,"nodeType":"UncheckedBlock","src":"5809:89:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":273,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"5841:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":276,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5848:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"5833:28:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"5882:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"5886:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":271,"id":282,"nodeType":"Return","src":"5875:12:0"}]}]},"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"5196:473:0","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":285,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:0","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"a","nameLocation":"5704:1:0","nodeType":"VariableDeclaration","scope":285,"src":"5696:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"b","nameLocation":"5723:1:0","nodeType":"VariableDeclaration","scope":285,"src":"5715:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:0","nodeType":"VariableDeclaration","scope":285,"src":"5734:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":266,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:0"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"5790:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:0"},"scope":311,"src":"5674:230:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":309,"nodeType":"Block","src":"6675:105:0","statements":[{"id":308,"nodeType":"UncheckedBlock","src":"6685:89:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":298,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"6717:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":301,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"6724:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"ExpressionStatement","src":"6709:28:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"6758:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"6762:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":296,"id":307,"nodeType":"Return","src":"6751:12:0"}]}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"5910:635:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":310,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:0","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"a","nameLocation":"6580:1:0","nodeType":"VariableDeclaration","scope":310,"src":"6572:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"b","nameLocation":"6599:1:0","nodeType":"VariableDeclaration","scope":310,"src":"6591:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:0","nodeType":"VariableDeclaration","scope":310,"src":"6610:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":291,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:0"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":310,"src":"6666:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:0"},"scope":311,"src":"6550:230:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":312,"src":"482:6300:0","usedErrors":[]}],"src":"107:6676:0"},"id":0},"contracts/WealthMate.sol":{"ast":{"absolutePath":"contracts/WealthMate.sol","exportedSymbols":{"SafeMath":[311],"WealthMate":[538]},"id":539,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":313,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"40:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":539,"sourceUnit":312,"src":"67:57:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"WealthMate","contractDependencies":[],"contractKind":"contract","documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"128:65:1","text":"@author Mbazu Ifeanyichukwu Daniel\n@dev Grandida bank"},"fullyImplemented":true,"id":538,"linearizedBaseContracts":[538],"name":"WealthMate","nameLocation":"206:10:1","nodeType":"ContractDefinition","nodes":[{"id":318,"libraryName":{"id":316,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":311,"src":"230:8:1"},"nodeType":"UsingForDirective","src":"224:24:1","typeName":{"id":317,"name":"uint","nodeType":"ElementaryTypeName","src":"243:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"8da5cb5b","id":320,"mutability":"mutable","name":"owner","nameLocation":"295:5:1","nodeType":"VariableDeclaration","scope":538,"src":"280:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":324,"mutability":"mutable","name":"balances","nameLocation":"420:8:1","nodeType":"VariableDeclaration","scope":538,"src":"388:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":323,"keyType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"396:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"388:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"407:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"id":330,"name":"Deposit","nameLocation":"458:7:1","nodeType":"EventDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"indexed":true,"mutability":"mutable","name":"customerAddress","nameLocation":"482:15:1","nodeType":"VariableDeclaration","scope":330,"src":"466:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"466:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":328,"indexed":false,"mutability":"mutable","name":"depositAmount","nameLocation":"504:13:1","nodeType":"VariableDeclaration","scope":330,"src":"499:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint","nodeType":"ElementaryTypeName","src":"499:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"465:53:1"},"src":"452:67:1"},{"anonymous":false,"id":338,"name":"Withdraw","nameLocation":"574:8:1","nodeType":"EventDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"customerAddress","nameLocation":"609:15:1","nodeType":"VariableDeclaration","scope":338,"src":"593:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":false,"mutability":"mutable","name":"withdrawAmount","nameLocation":"640:14:1","nodeType":"VariableDeclaration","scope":338,"src":"635:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint","nodeType":"ElementaryTypeName","src":"635:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"670:10:1","nodeType":"VariableDeclaration","scope":338,"src":"665:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"665:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"582:105:1"},"src":"568:120:1"},{"anonymous":false,"id":346,"name":"Transfer","nameLocation":"744:8:1","nodeType":"EventDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"761:4:1","nodeType":"VariableDeclaration","scope":346,"src":"753:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"775:2:1","nodeType":"VariableDeclaration","scope":346,"src":"767:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"767:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"indexed":false,"mutability":"mutable","name":"transferAmount","nameLocation":"784:14:1","nodeType":"VariableDeclaration","scope":346,"src":"779:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint","nodeType":"ElementaryTypeName","src":"779:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"752:47:1"},"src":"738:62:1"},{"body":{"id":357,"nodeType":"Block","src":"910:191:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":349,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1025:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1025:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":351,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1039:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1025:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75277265206e6f7420746865206f776e6572206f66207468652062616e6b","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1046:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f40f1253ecbada1db7d6245c5b1a0752e7055c0e3e51fb691187553122469297","typeString":"literal_string \"You're not the owner of the bank\""},"value":"You're not the owner of the bank"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f40f1253ecbada1db7d6245c5b1a0752e7055c0e3e51fb691187553122469297","typeString":"literal_string \"You're not the owner of the bank\""}],"id":348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1017:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1017:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"1017:64:1"},{"id":356,"nodeType":"PlaceholderStatement","src":"1092:1:1"}]},"id":358,"name":"onlyOwner","nameLocation":"898:9:1","nodeType":"ModifierDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"907:2:1"},"src":"889:212:1","virtual":false,"visibility":"internal"},{"body":{"id":366,"nodeType":"Block","src":"1143:108:1","statements":[{"expression":{"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":361,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1154:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":362,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1162:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1162:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1154:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":365,"nodeType":"ExpressionStatement","src":"1154:18:1"}]},"id":367,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"1140:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"1143:0:1"},"scope":538,"src":"1129:122:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":370,"nodeType":"Block","src":"1324:2:1","statements":[]},"id":371,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"1304:2:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"1324:0:1"},"scope":538,"src":"1297:29:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":374,"nodeType":"Block","src":"1401:2:1","statements":[]},"id":375,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1381:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"1401:0:1"},"scope":538,"src":"1373:30:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":386,"nodeType":"Block","src":"1548:114:1","statements":[{"expression":{"baseExpression":{"id":381,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1634:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":384,"indexExpression":{"expression":{"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1643:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1643:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1634:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":380,"id":385,"nodeType":"Return","src":"1627:27:1"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1451:32:1","text":"@dev Get balance of customer"},"functionSelector":"a853409a","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"getCustomerBalance","nameLocation":"1498:18:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"1516:2:1"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"1542:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint","nodeType":"ElementaryTypeName","src":"1542:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:6:1"},"scope":538,"src":"1489:173:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":420,"nodeType":"Block","src":"1756:345:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":392,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1815:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1815:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1828:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1815:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520646f6e2774206861766520656e6f75676820746f6b656e20746f206465706f736974","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1831:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e536c3eadec48f4557578294e6802eee6420e33f7b286af820d0bb8a128b54c","typeString":"literal_string \"You don't have enough token to deposit\""},"value":"You don't have enough token to deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e536c3eadec48f4557578294e6802eee6420e33f7b286af820d0bb8a128b54c","typeString":"literal_string \"You don't have enough token to deposit\""}],"id":391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1807:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1807:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"ExpressionStatement","src":"1807:65:1"},{"expression":{"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":399,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1945:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":402,"indexExpression":{"expression":{"id":400,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1954:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1954:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1945:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1993:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1993:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":403,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1968:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"expression":{"id":404,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1977:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1977:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1968:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":175,"src":"1968:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1968:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1945:58:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":412,"nodeType":"ExpressionStatement","src":"1945:58:1"},{"eventCall":{"arguments":[{"expression":{"id":414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2071:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2071:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2083:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2083:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":413,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"2063:7:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2063:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"EmitStatement","src":"2058:35:1"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"1670:39:1","text":"@notice deposit token into the bank"},"functionSelector":"c89039c5","id":421,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"1724:12:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"1736:2:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"1756:0:1"},"scope":538,"src":"1715:386:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":468,"nodeType":"Block","src":"2267:513:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2343:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":431,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2361:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"expression":{"id":432,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2370:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2370:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2361:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2343:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e742066756e6473","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2383:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5","typeString":"literal_string \"insufficient funds\""},"value":"insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5","typeString":"literal_string \"insufficient funds\""}],"id":429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2335:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"2335:69:1"},{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":439,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2478:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":442,"indexExpression":{"expression":{"id":440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2487:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2487:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2478:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":448,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2526:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":443,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2501:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":446,"indexExpression":{"expression":{"id":444,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2510:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2510:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2501:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":190,"src":"2501:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2478:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":451,"nodeType":"ExpressionStatement","src":"2478:63:1"},{"expression":{"arguments":[{"id":455,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2636:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":452,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2618:8:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"2618:17:1","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2618:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"2618:33:1"},{"eventCall":{"arguments":[{"expression":{"id":459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2723:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2723:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2735:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":462,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2751:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":465,"indexExpression":{"expression":{"id":463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2760:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2760:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2751:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":458,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2714:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2714:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"EmitStatement","src":"2709:63:1"}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2109:48:1","text":"@dev customer withdraw token back to account"},"functionSelector":"9e281a98","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"2172:13:1","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"receiver","nameLocation":"2212:8:1","nodeType":"VariableDeclaration","scope":469,"src":"2196:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"2196:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"withdrawAmount","nameLocation":"2236:14:1","nodeType":"VariableDeclaration","scope":469,"src":"2231:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint","nodeType":"ElementaryTypeName","src":"2231:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2185:72:1"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2267:0:1"},"scope":538,"src":"2163:617:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":536,"nodeType":"Block","src":"2969:693:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":480,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3045:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":483,"indexExpression":{"expression":{"id":481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3054:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3054:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3045:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":484,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3069:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3045:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e742066756e6473","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3085:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5","typeString":"literal_string \"insufficient funds\""},"value":"insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5","typeString":"literal_string \"insufficient funds\""}],"id":479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3037:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3037:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3037:69:1"},{"expression":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":489,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3180:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":492,"indexExpression":{"expression":{"id":490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3189:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3189:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3180:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":498,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3228:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":493,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3203:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":496,"indexExpression":{"expression":{"id":494,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3212:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3212:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3203:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":190,"src":"3203:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3203:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3180:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":501,"nodeType":"ExpressionStatement","src":"3180:63:1"},{"assignments":[503,null],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"success","nameLocation":"3326:7:1","nodeType":"VariableDeclaration","scope":536,"src":"3321:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":502,"name":"bool","nodeType":"ElementaryTypeName","src":"3321:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":510,"initialValue":{"arguments":[{"hexValue":"","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3370:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3339:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3339:7:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":506,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3354:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3339:30:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3339:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3320:53:1"},{"expression":{"arguments":[{"id":512,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3392:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c206661696c6564","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:13:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b","typeString":"literal_string \"Call failed\""},"value":"Call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b","typeString":"literal_string \"Call failed\""}],"id":511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3384:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3384:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"ExpressionStatement","src":"3384:31:1"},{"expression":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":516,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3484:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":518,"indexExpression":{"id":517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3493:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3484:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":523,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3516:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":519,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3499:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":521,"indexExpression":{"id":520,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3508:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3499:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":175,"src":"3499:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3499:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3484:47:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":526,"nodeType":"ExpressionStatement","src":"3484:47:1"},{"eventCall":{"arguments":[{"expression":{"id":528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3601:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3601:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3613:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3617:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":527,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3592:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3592:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"EmitStatement","src":"3587:45:1"},{"expression":{"hexValue":"74727565","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3650:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":478,"id":535,"nodeType":"Return","src":"3643:11:1"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"2788:62:1","text":"@dev send token to another account from your bank balances"},"functionSelector":"1072cbea","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"transferToken","nameLocation":"2865:13:1","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"to","nameLocation":"2897:2:1","nodeType":"VariableDeclaration","scope":537,"src":"2889:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"transferAmount","nameLocation":"2915:14:1","nodeType":"VariableDeclaration","scope":537,"src":"2910:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint","nodeType":"ElementaryTypeName","src":"2910:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2878:58:1"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"2963:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"2963:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2962:6:1"},"scope":538,"src":"2856:806:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":539,"src":"197:3468:1","usedErrors":[]}],"src":"40:3627:1"},"id":1}},"contracts":{"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfbccff2f3c8897270c115aa318ec81e1d0c8133c72608ad6179bf28ac682d4464736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xBC 0xCF CALLCODE RETURN 0xC8 DUP10 PUSH19 0x70C115AA318EC81E1D0C8133C72608AD6179BF 0x28 0xAC PUSH9 0x2D4464736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"482:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfbccff2f3c8897270c115aa318ec81e1d0c8133c72608ad6179bf28ac682d4464736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xBC 0xCF CALLCODE RETURN 0xC8 DUP10 PUSH19 0x70C115AA318EC81E1D0C8133C72608AD6179BF 0x28 0xAC PUSH9 0x2D4464736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"482:6300:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}"}},"contracts/WealthMate.sol":{"WealthMate":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"customerAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"depositAmount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"transferAmount","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"customerAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"Withdraw","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getCustomerBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"transferAmount","type":"uint256"}],"name":"transferToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address payable","name":"receiver","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_367":{"entryPoint":null,"id":367,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610609806100326000396000f3fe6080604052600436106100635760003560e01c80639e281a98116100405780639e281a9814610107578063a853409a14610127578063c89039c51461014957005b80631072cbea1461006c57806327e235e3146100945780638da5cb5b146100cf57005b3661006a57005b005b61007f61007a36600461052c565b610151565b60405190151581526020015b60405180910390f35b3480156100a057600080fd5b506100c16100af366004610558565b60016020526000908152604090205481565b60405190815260200161008b565b3480156100db57600080fd5b506000546100ef906001600160a01b031681565b6040516001600160a01b03909116815260200161008b565b34801561011357600080fd5b5061006a61012236600461052c565b61030b565b34801561013357600080fd5b50336000908152600160205260409020546100c1565b61006a610418565b336000908152600160205260408120548211156101b55760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e742066756e6473000000000000000000000000000060448201526064015b60405180910390fd5b336000908152600160205260409020546101cf90836104f5565b336000908152600160205260408082209290925590516001600160a01b0385169084908381818185875af1925050503d806000811461022a576040519150601f19603f3d011682016040523d82523d6000602084013e61022f565b606091505b50509050806102805760405162461bcd60e51b815260206004820152600b60248201527f43616c6c206661696c656400000000000000000000000000000000000000000060448201526064016101ac565b6001600160a01b0384166000908152600160205260409020546102a39084610508565b6001600160a01b0385166000818152600160209081526040918290209390935580513381529283019190915281018490527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a15060019392505050565b3360009081526001602052604090205481111561036a5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e742066756e6473000000000000000000000000000060448201526064016101ac565b3360009081526001602052604090205461038490826104f5565b336000908152600160205260408082209290925590516001600160a01b0384169183156108fc02918491818181858888f193505050501580156103cb573d6000803e3d6000fd5b5033600081815260016020908152604091829020548251858152918201527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a25050565b3461048b5760405162461bcd60e51b815260206004820152602660248201527f596f7520646f6e2774206861766520656e6f75676820746f6b656e20746f206460448201527f65706f736974000000000000000000000000000000000000000000000000000060648201526084016101ac565b336000908152600160205260409020546104a59034610508565b33600081815260016020526040908190209290925590517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906104eb9034815260200190565b60405180910390a2565b600061050182846105a4565b9392505050565b600061050182846105bb565b6001600160a01b038116811461052957600080fd5b50565b6000806040838503121561053f57600080fd5b823561054a81610514565b946020939093013593505050565b60006020828403121561056a57600080fd5b813561050181610514565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156105b6576105b6610575565b500390565b600082198211156105ce576105ce610575565b50019056fea2646970667358221220fb6e3bb7b1181b6d7bc2030cd182ec212ad909bf1faa6d7622aa274bbe6e250b64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x609 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x63 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E281A98 GT PUSH2 0x40 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xA853409A EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xC89039C5 EQ PUSH2 0x149 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCF JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x6A JUMPI STOP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x52C JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xAF CALLDATASIZE PUSH1 0x4 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xEF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x52C JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC1 JUMP JUMPDEST PUSH2 0x6A PUSH2 0x418 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1CF SWAP1 DUP4 PUSH2 0x4F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C206661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A3 SWAP1 DUP5 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD CALLER DUP2 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1AC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x384 SWAP1 DUP3 PUSH2 0x4F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLVALUE PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F75676820746F6B656E20746F2064 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65706F7369740000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1AC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4A5 SWAP1 CALLVALUE PUSH2 0x508 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH2 0x4EB SWAP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 DUP3 DUP5 PUSH2 0x5A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 DUP3 DUP5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x54A DUP2 PUSH2 0x514 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x501 DUP2 PUSH2 0x514 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x575 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5CE JUMPI PUSH2 0x5CE PUSH2 0x575 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH15 0x3BB7B1181B6D7BC2030CD182EC212A 0xD9 MULMOD 0xBF 0x1F 0xAA PUSH14 0x7622AA274BBE6E250B64736F6C63 NUMBER STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"197:3468:1:-:0;;;1129:122;;;;;;;;;-1:-1:-1;1154:5:1;:18;;-1:-1:-1;;;;;;1154:18:1;1162:10;1154:18;;;197:3468;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_371":{"entryPoint":null,"id":371,"parameterSlots":0,"returnSlots":0},"@_375":{"entryPoint":null,"id":375,"parameterSlots":0,"returnSlots":0},"@add_175":{"entryPoint":1288,"id":175,"parameterSlots":2,"returnSlots":1},"@balances_324":{"entryPoint":null,"id":324,"parameterSlots":0,"returnSlots":0},"@depositToken_421":{"entryPoint":1048,"id":421,"parameterSlots":0,"returnSlots":0},"@getCustomerBalance_387":{"entryPoint":null,"id":387,"parameterSlots":0,"returnSlots":1},"@owner_320":{"entryPoint":null,"id":320,"parameterSlots":0,"returnSlots":0},"@sub_190":{"entryPoint":1269,"id":190,"parameterSlots":2,"returnSlots":1},"@transferToken_537":{"entryPoint":337,"id":537,"parameterSlots":2,"returnSlots":1},"@withdrawToken_469":{"entryPoint":779,"id":469,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":1368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1324,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e536c3eadec48f4557578294e6802eee6420e33f7b286af820d0bb8a128b54c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1467,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1444,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1397,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":1300,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4087:2","statements":[{"nodeType":"YulBlock","src":"6:3:2","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:2","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:2"},"nodeType":"YulFunctionCall","src":"148:12:2"},"nodeType":"YulExpressionStatement","src":"148:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:2"},"nodeType":"YulFunctionCall","src":"89:54:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:2"},"nodeType":"YulFunctionCall","src":"79:65:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:2"},"nodeType":"YulFunctionCall","src":"72:73:2"},"nodeType":"YulIf","src":"69:93:2"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:2","type":""}],"src":"14:154:2"},{"body":{"nodeType":"YulBlock","src":"260:228:2","statements":[{"body":{"nodeType":"YulBlock","src":"306:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"315:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"308:6:2"},"nodeType":"YulFunctionCall","src":"308:12:2"},"nodeType":"YulExpressionStatement","src":"308:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"281:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"290:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"277:3:2"},"nodeType":"YulFunctionCall","src":"277:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"302:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"273:3:2"},"nodeType":"YulFunctionCall","src":"273:32:2"},"nodeType":"YulIf","src":"270:52:2"},{"nodeType":"YulVariableDeclaration","src":"331:36:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"357:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"344:12:2"},"nodeType":"YulFunctionCall","src":"344:23:2"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"335:5:2","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"401:5:2"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"376:24:2"},"nodeType":"YulFunctionCall","src":"376:31:2"},"nodeType":"YulExpressionStatement","src":"376:31:2"},{"nodeType":"YulAssignment","src":"416:15:2","value":{"name":"value","nodeType":"YulIdentifier","src":"426:5:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:2"}]},{"nodeType":"YulAssignment","src":"440:42:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"467:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"463:3:2"},"nodeType":"YulFunctionCall","src":"463:18:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"450:12:2"},"nodeType":"YulFunctionCall","src":"450:32:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"440:6:2"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"218:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"229:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"241:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"249:6:2","type":""}],"src":"173:315:2"},{"body":{"nodeType":"YulBlock","src":"588:92:2","statements":[{"nodeType":"YulAssignment","src":"598:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"610:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"621:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"606:3:2"},"nodeType":"YulFunctionCall","src":"606:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"598:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"640:9:2"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"665:6:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"658:6:2"},"nodeType":"YulFunctionCall","src":"658:14:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"651:6:2"},"nodeType":"YulFunctionCall","src":"651:22:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"633:6:2"},"nodeType":"YulFunctionCall","src":"633:41:2"},"nodeType":"YulExpressionStatement","src":"633:41:2"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"557:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"568:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"579:4:2","type":""}],"src":"493:187:2"},{"body":{"nodeType":"YulBlock","src":"755:177:2","statements":[{"body":{"nodeType":"YulBlock","src":"801:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"810:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"813:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"803:6:2"},"nodeType":"YulFunctionCall","src":"803:12:2"},"nodeType":"YulExpressionStatement","src":"803:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"776:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"785:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"772:3:2"},"nodeType":"YulFunctionCall","src":"772:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"797:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"768:3:2"},"nodeType":"YulFunctionCall","src":"768:32:2"},"nodeType":"YulIf","src":"765:52:2"},{"nodeType":"YulVariableDeclaration","src":"826:36:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"852:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"839:12:2"},"nodeType":"YulFunctionCall","src":"839:23:2"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"830:5:2","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"896:5:2"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"871:24:2"},"nodeType":"YulFunctionCall","src":"871:31:2"},"nodeType":"YulExpressionStatement","src":"871:31:2"},{"nodeType":"YulAssignment","src":"911:15:2","value":{"name":"value","nodeType":"YulIdentifier","src":"921:5:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"911:6:2"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"721:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"732:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"744:6:2","type":""}],"src":"685:247:2"},{"body":{"nodeType":"YulBlock","src":"1038:76:2","statements":[{"nodeType":"YulAssignment","src":"1048:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1060:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1071:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1056:3:2"},"nodeType":"YulFunctionCall","src":"1056:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1048:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1090:9:2"},{"name":"value0","nodeType":"YulIdentifier","src":"1101:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1083:6:2"},"nodeType":"YulFunctionCall","src":"1083:25:2"},"nodeType":"YulExpressionStatement","src":"1083:25:2"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1007:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1018:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1029:4:2","type":""}],"src":"937:177:2"},{"body":{"nodeType":"YulBlock","src":"1220:125:2","statements":[{"nodeType":"YulAssignment","src":"1230:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1242:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1253:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:2"},"nodeType":"YulFunctionCall","src":"1238:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1230:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1272:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1287:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1295:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1283:3:2"},"nodeType":"YulFunctionCall","src":"1283:55:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1265:6:2"},"nodeType":"YulFunctionCall","src":"1265:74:2"},"nodeType":"YulExpressionStatement","src":"1265:74:2"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1189:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1200:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1211:4:2","type":""}],"src":"1119:226:2"},{"body":{"nodeType":"YulBlock","src":"1445:228:2","statements":[{"body":{"nodeType":"YulBlock","src":"1491:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1500:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1503:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1493:6:2"},"nodeType":"YulFunctionCall","src":"1493:12:2"},"nodeType":"YulExpressionStatement","src":"1493:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1466:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1475:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1462:3:2"},"nodeType":"YulFunctionCall","src":"1462:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1487:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1458:3:2"},"nodeType":"YulFunctionCall","src":"1458:32:2"},"nodeType":"YulIf","src":"1455:52:2"},{"nodeType":"YulVariableDeclaration","src":"1516:36:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1542:9:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1529:12:2"},"nodeType":"YulFunctionCall","src":"1529:23:2"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1520:5:2","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1586:5:2"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1561:24:2"},"nodeType":"YulFunctionCall","src":"1561:31:2"},"nodeType":"YulExpressionStatement","src":"1561:31:2"},{"nodeType":"YulAssignment","src":"1601:15:2","value":{"name":"value","nodeType":"YulIdentifier","src":"1611:5:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:2"}]},{"nodeType":"YulAssignment","src":"1625:42:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1652:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1663:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1648:3:2"},"nodeType":"YulFunctionCall","src":"1648:18:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1635:12:2"},"nodeType":"YulFunctionCall","src":"1635:32:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1625:6:2"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1403:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1414:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1426:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1434:6:2","type":""}],"src":"1350:323:2"},{"body":{"nodeType":"YulBlock","src":"1852:168:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1869:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1880:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1862:6:2"},"nodeType":"YulFunctionCall","src":"1862:21:2"},"nodeType":"YulExpressionStatement","src":"1862:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1903:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1899:3:2"},"nodeType":"YulFunctionCall","src":"1899:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"1919:2:2","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1892:6:2"},"nodeType":"YulFunctionCall","src":"1892:30:2"},"nodeType":"YulExpressionStatement","src":"1892:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1942:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1953:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1938:3:2"},"nodeType":"YulFunctionCall","src":"1938:18:2"},{"hexValue":"696e73756666696369656e742066756e6473","kind":"string","nodeType":"YulLiteral","src":"1958:20:2","type":"","value":"insufficient funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1931:6:2"},"nodeType":"YulFunctionCall","src":"1931:48:2"},"nodeType":"YulExpressionStatement","src":"1931:48:2"},{"nodeType":"YulAssignment","src":"1988:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2011:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1996:3:2"},"nodeType":"YulFunctionCall","src":"1996:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1988:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1829:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1843:4:2","type":""}],"src":"1678:342:2"},{"body":{"nodeType":"YulBlock","src":"2216:14:2","statements":[{"nodeType":"YulAssignment","src":"2218:10:2","value":{"name":"pos","nodeType":"YulIdentifier","src":"2225:3:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2218:3:2"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2200:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2208:3:2","type":""}],"src":"2025:205:2"},{"body":{"nodeType":"YulBlock","src":"2409:161:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2426:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2437:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2419:6:2"},"nodeType":"YulFunctionCall","src":"2419:21:2"},"nodeType":"YulExpressionStatement","src":"2419:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2471:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2456:3:2"},"nodeType":"YulFunctionCall","src":"2456:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"2476:2:2","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2449:6:2"},"nodeType":"YulFunctionCall","src":"2449:30:2"},"nodeType":"YulExpressionStatement","src":"2449:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2499:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2495:3:2"},"nodeType":"YulFunctionCall","src":"2495:18:2"},{"hexValue":"43616c6c206661696c6564","kind":"string","nodeType":"YulLiteral","src":"2515:13:2","type":"","value":"Call failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:2"},"nodeType":"YulFunctionCall","src":"2488:41:2"},"nodeType":"YulExpressionStatement","src":"2488:41:2"},{"nodeType":"YulAssignment","src":"2538:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2550:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2561:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2546:3:2"},"nodeType":"YulFunctionCall","src":"2546:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2538:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2386:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2400:4:2","type":""}],"src":"2235:335:2"},{"body":{"nodeType":"YulBlock","src":"2732:241:2","statements":[{"nodeType":"YulAssignment","src":"2742:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2765:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2750:3:2"},"nodeType":"YulFunctionCall","src":"2750:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2742:4:2"}]},{"nodeType":"YulVariableDeclaration","src":"2777:52:2","value":{"kind":"number","nodeType":"YulLiteral","src":"2787:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2781:2:2","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2845:9:2"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2860:6:2"},{"name":"_1","nodeType":"YulIdentifier","src":"2868:2:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2856:3:2"},"nodeType":"YulFunctionCall","src":"2856:15:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2838:6:2"},"nodeType":"YulFunctionCall","src":"2838:34:2"},"nodeType":"YulExpressionStatement","src":"2838:34:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2892:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2903:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2888:3:2"},"nodeType":"YulFunctionCall","src":"2888:18:2"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2912:6:2"},{"name":"_1","nodeType":"YulIdentifier","src":"2920:2:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2908:3:2"},"nodeType":"YulFunctionCall","src":"2908:15:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2881:6:2"},"nodeType":"YulFunctionCall","src":"2881:43:2"},"nodeType":"YulExpressionStatement","src":"2881:43:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2944:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2955:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2940:3:2"},"nodeType":"YulFunctionCall","src":"2940:18:2"},{"name":"value2","nodeType":"YulIdentifier","src":"2960:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2933:6:2"},"nodeType":"YulFunctionCall","src":"2933:34:2"},"nodeType":"YulExpressionStatement","src":"2933:34:2"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2685:9:2","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2696:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2704:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2712:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2723:4:2","type":""}],"src":"2575:398:2"},{"body":{"nodeType":"YulBlock","src":"3107:119:2","statements":[{"nodeType":"YulAssignment","src":"3117:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3129:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3140:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3125:3:2"},"nodeType":"YulFunctionCall","src":"3125:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3117:4:2"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:2"},{"name":"value0","nodeType":"YulIdentifier","src":"3170:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:2"},"nodeType":"YulFunctionCall","src":"3152:25:2"},"nodeType":"YulExpressionStatement","src":"3152:25:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3197:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3208:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:2"},"nodeType":"YulFunctionCall","src":"3193:18:2"},{"name":"value1","nodeType":"YulIdentifier","src":"3213:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3186:6:2"},"nodeType":"YulFunctionCall","src":"3186:34:2"},"nodeType":"YulExpressionStatement","src":"3186:34:2"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3068:9:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3079:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3087:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3098:4:2","type":""}],"src":"2978:248:2"},{"body":{"nodeType":"YulBlock","src":"3405:228:2","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3422:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3433:2:2","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3415:6:2"},"nodeType":"YulFunctionCall","src":"3415:21:2"},"nodeType":"YulExpressionStatement","src":"3415:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3467:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:2"},"nodeType":"YulFunctionCall","src":"3452:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"3472:2:2","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:2"},"nodeType":"YulFunctionCall","src":"3445:30:2"},"nodeType":"YulExpressionStatement","src":"3445:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3495:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3506:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3491:3:2"},"nodeType":"YulFunctionCall","src":"3491:18:2"},{"hexValue":"596f7520646f6e2774206861766520656e6f75676820746f6b656e20746f2064","kind":"string","nodeType":"YulLiteral","src":"3511:34:2","type":"","value":"You don't have enough token to d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3484:6:2"},"nodeType":"YulFunctionCall","src":"3484:62:2"},"nodeType":"YulExpressionStatement","src":"3484:62:2"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3566:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3577:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:2"},"nodeType":"YulFunctionCall","src":"3562:18:2"},{"hexValue":"65706f736974","kind":"string","nodeType":"YulLiteral","src":"3582:8:2","type":"","value":"eposit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:2"},"nodeType":"YulFunctionCall","src":"3555:36:2"},"nodeType":"YulExpressionStatement","src":"3555:36:2"},{"nodeType":"YulAssignment","src":"3600:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3612:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3623:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3608:3:2"},"nodeType":"YulFunctionCall","src":"3608:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3600:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e536c3eadec48f4557578294e6802eee6420e33f7b286af820d0bb8a128b54c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3382:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3396:4:2","type":""}],"src":"3231:402:2"},{"body":{"nodeType":"YulBlock","src":"3670:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3687:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3690:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3680:6:2"},"nodeType":"YulFunctionCall","src":"3680:88:2"},"nodeType":"YulExpressionStatement","src":"3680:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3787:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3777:6:2"},"nodeType":"YulFunctionCall","src":"3777:15:2"},"nodeType":"YulExpressionStatement","src":"3777:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3808:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3811:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3801:6:2"},"nodeType":"YulFunctionCall","src":"3801:15:2"},"nodeType":"YulExpressionStatement","src":"3801:15:2"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3638:184:2"},{"body":{"nodeType":"YulBlock","src":"3876:76:2","statements":[{"body":{"nodeType":"YulBlock","src":"3898:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3900:16:2"},"nodeType":"YulFunctionCall","src":"3900:18:2"},"nodeType":"YulExpressionStatement","src":"3900:18:2"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3892:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"3895:1:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3889:2:2"},"nodeType":"YulFunctionCall","src":"3889:8:2"},"nodeType":"YulIf","src":"3886:34:2"},{"nodeType":"YulAssignment","src":"3929:17:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3941:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"3944:1:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3937:3:2"},"nodeType":"YulFunctionCall","src":"3937:9:2"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3929:4:2"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3858:1:2","type":""},{"name":"y","nodeType":"YulTypedName","src":"3861:1:2","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3867:4:2","type":""}],"src":"3827:125:2"},{"body":{"nodeType":"YulBlock","src":"4005:80:2","statements":[{"body":{"nodeType":"YulBlock","src":"4032:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4034:16:2"},"nodeType":"YulFunctionCall","src":"4034:18:2"},"nodeType":"YulExpressionStatement","src":"4034:18:2"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4021:1:2"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4028:1:2"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4024:3:2"},"nodeType":"YulFunctionCall","src":"4024:6:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4018:2:2"},"nodeType":"YulFunctionCall","src":"4018:13:2"},"nodeType":"YulIf","src":"4015:39:2"},{"nodeType":"YulAssignment","src":"4063:16:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4074:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"4077:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4070:3:2"},"nodeType":"YulFunctionCall","src":"4070:9:2"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4063:3:2"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3988:1:2","type":""},{"name":"y","nodeType":"YulTypedName","src":"3991:1:2","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3997:3:2","type":""}],"src":"3957:128:2"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"insufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_6e536c3eadec48f4557578294e6802eee6420e33f7b286af820d0bb8a128b54c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"You don't have enough token to d\")\n        mstore(add(headStart, 96), \"eposit\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100635760003560e01c80639e281a98116100405780639e281a9814610107578063a853409a14610127578063c89039c51461014957005b80631072cbea1461006c57806327e235e3146100945780638da5cb5b146100cf57005b3661006a57005b005b61007f61007a36600461052c565b610151565b60405190151581526020015b60405180910390f35b3480156100a057600080fd5b506100c16100af366004610558565b60016020526000908152604090205481565b60405190815260200161008b565b3480156100db57600080fd5b506000546100ef906001600160a01b031681565b6040516001600160a01b03909116815260200161008b565b34801561011357600080fd5b5061006a61012236600461052c565b61030b565b34801561013357600080fd5b50336000908152600160205260409020546100c1565b61006a610418565b336000908152600160205260408120548211156101b55760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e742066756e6473000000000000000000000000000060448201526064015b60405180910390fd5b336000908152600160205260409020546101cf90836104f5565b336000908152600160205260408082209290925590516001600160a01b0385169084908381818185875af1925050503d806000811461022a576040519150601f19603f3d011682016040523d82523d6000602084013e61022f565b606091505b50509050806102805760405162461bcd60e51b815260206004820152600b60248201527f43616c6c206661696c656400000000000000000000000000000000000000000060448201526064016101ac565b6001600160a01b0384166000908152600160205260409020546102a39084610508565b6001600160a01b0385166000818152600160209081526040918290209390935580513381529283019190915281018490527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a15060019392505050565b3360009081526001602052604090205481111561036a5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e742066756e6473000000000000000000000000000060448201526064016101ac565b3360009081526001602052604090205461038490826104f5565b336000908152600160205260408082209290925590516001600160a01b0384169183156108fc02918491818181858888f193505050501580156103cb573d6000803e3d6000fd5b5033600081815260016020908152604091829020548251858152918201527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a25050565b3461048b5760405162461bcd60e51b815260206004820152602660248201527f596f7520646f6e2774206861766520656e6f75676820746f6b656e20746f206460448201527f65706f736974000000000000000000000000000000000000000000000000000060648201526084016101ac565b336000908152600160205260409020546104a59034610508565b33600081815260016020526040908190209290925590517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906104eb9034815260200190565b60405180910390a2565b600061050182846105a4565b9392505050565b600061050182846105bb565b6001600160a01b038116811461052957600080fd5b50565b6000806040838503121561053f57600080fd5b823561054a81610514565b946020939093013593505050565b60006020828403121561056a57600080fd5b813561050181610514565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156105b6576105b6610575565b500390565b600082198211156105ce576105ce610575565b50019056fea2646970667358221220fb6e3bb7b1181b6d7bc2030cd182ec212ad909bf1faa6d7622aa274bbe6e250b64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x63 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E281A98 GT PUSH2 0x40 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xA853409A EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xC89039C5 EQ PUSH2 0x149 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCF JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x6A JUMPI STOP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x52C JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xAF CALLDATASIZE PUSH1 0x4 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xEF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x52C JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC1 JUMP JUMPDEST PUSH2 0x6A PUSH2 0x418 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1CF SWAP1 DUP4 PUSH2 0x4F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C206661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A3 SWAP1 DUP5 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD CALLER DUP2 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1AC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x384 SWAP1 DUP3 PUSH2 0x4F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLVALUE PUSH2 0x48B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F75676820746F6B656E20746F2064 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65706F7369740000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1AC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4A5 SWAP1 CALLVALUE PUSH2 0x508 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH2 0x4EB SWAP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 DUP3 DUP5 PUSH2 0x5A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 DUP3 DUP5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x54A DUP2 PUSH2 0x514 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x501 DUP2 PUSH2 0x514 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x575 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5CE JUMPI PUSH2 0x5CE PUSH2 0x575 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH15 0x3BB7B1181B6D7BC2030CD182EC212A 0xD9 MULMOD 0xBF 0x1F 0xAA PUSH14 0x7622AA274BBE6E250B64736F6C63 NUMBER STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"197:3468:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2856:806;;;;;;:::i;:::-;;:::i;:::-;;;658:14:2;;651:22;633:41;;621:2;606:18;2856:806:1;;;;;;;;388:40;;;;;;;;;;-1:-1:-1;388:40:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1083:25:2;;;1071:2;1056:18;388:40:1;937:177:2;280:20:1;;;;;;;;;;-1:-1:-1;280:20:1;;;;-1:-1:-1;;;;;280:20:1;;;;;;-1:-1:-1;;;;;1283:55:2;;;1265:74;;1253:2;1238:18;280:20:1;1119:226:2;2163:617:1;;;;;;;;;;-1:-1:-1;2163:617:1;;;;;:::i;:::-;;:::i;1489:173::-;;;;;;;;;;-1:-1:-1;1643:10:1;1542:4;1634:20;;;:8;:20;;;;;;1489:173;;1715:386;;;:::i;2856:806::-;3054:10;2963:4;3045:20;;;:8;:20;;;;;;:38;-1:-1:-1;3045:38:1;3037:69;;;;-1:-1:-1;;;3037:69:1;;1880:2:2;3037:69:1;;;1862:21:2;1919:2;1899:18;;;1892:30;1958:20;1938:18;;;1931:48;1996:18;;3037:69:1;;;;;;;;;3212:10;3203:20;;;;:8;:20;;;;;;:40;;3228:14;3203:24;:40::i;:::-;3189:10;3180:20;;;;:8;:20;;;;;;:63;;;;3339:34;;-1:-1:-1;;;;;3339:7:1;;;3354:14;;3180:20;3339:34;3180:20;3339:34;3354:14;3339:7;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3320:53;;;3392:7;3384:31;;;;-1:-1:-1;;;3384:31:1;;2437:2:2;3384:31:1;;;2419:21:2;2476:2;2456:18;;;2449:30;2515:13;2495:18;;;2488:41;2546:18;;3384:31:1;2235:335:2;3384:31:1;-1:-1:-1;;;;;3499:12:1;;;;;;:8;:12;;;;;;:32;;3516:14;3499:16;:32::i;:::-;-1:-1:-1;;;;;3484:12:1;;;;;;:8;:12;;;;;;;;;:47;;;;3592:40;;3601:10;2838:34:2;;2888:18;;;2881:43;;;;2940:18;;2933:34;;;3592:40:1;;2765:2:2;2750:18;3592:40:1;;;;;;;-1:-1:-1;3650:4:1;;2856:806;-1:-1:-1;;;2856:806:1:o;2163:617::-;2370:10;2361:20;;;;:8;:20;;;;;;2343:38;;;2335:69;;;;-1:-1:-1;;;2335:69:1;;1880:2:2;2335:69:1;;;1862:21:2;1919:2;1899:18;;;1892:30;1958:20;1938:18;;;1931:48;1996:18;;2335:69:1;1678:342:2;2335:69:1;2510:10;2501:20;;;;:8;:20;;;;;;:40;;2526:14;2501:24;:40::i;:::-;2487:10;2478:20;;;;:8;:20;;;;;;:63;;;;2618:33;;-1:-1:-1;;;;;2618:17:1;;;:33;;;;;2636:14;;2618:33;2478:20;2618:33;2636:14;2618:17;:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2723:10:1;2751:20;;;;:8;:20;;;;;;;;;;2714:58;;3152:25:2;;;3193:18;;;3186:34;2714:58:1;;3125:18:2;2714:58:1;;;;;;;2163:617;;:::o;1715:386::-;1815:9;1807:65;;;;-1:-1:-1;;;1807:65:1;;3433:2:2;1807:65:1;;;3415:21:2;3472:2;3452:18;;;3445:30;3511:34;3491:18;;;3484:62;3582:8;3562:18;;;3555:36;3608:19;;1807:65:1;3231:402:2;1807:65:1;1977:10;1968:20;;;;:8;:20;;;;;;:35;;1993:9;1968:24;:35::i;:::-;1954:10;1945:20;;;;:8;:20;;;;;;;:58;;;;2063:30;;;;;;2083:9;1083:25:2;;1071:2;1056:18;;937:177;2063:30:1;;;;;;;;1715:386::o;3122:96:0:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:0:o;2755:::-;2813:7;2839:5;2843:1;2839;:5;:::i;14:154:2:-;-1:-1:-1;;;;;93:5:2;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:315::-;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:2:o;685:247::-;744:6;797:2;785:9;776:7;772:23;768:32;765:52;;;813:1;810;803:12;765:52;852:9;839:23;871:31;896:5;871:31;:::i;3638:184::-;3690:77;3687:1;3680:88;3787:4;3784:1;3777:15;3811:4;3808:1;3801:15;3827:125;3867:4;3895:1;3892;3889:8;3886:34;;;3900:18;;:::i;:::-;-1:-1:-1;3937:9:2;;3827:125::o;3957:128::-;3997:3;4028:1;4024:6;4021:1;4018:13;4015:39;;;4034:18;;:::i;:::-;-1:-1:-1;4070:9:2;;3957:128::o"},"methodIdentifiers":{"balances(address)":"27e235e3","depositToken()":"c89039c5","getCustomerBalance()":"a853409a","owner()":"8da5cb5b","transferToken(address,uint256)":"1072cbea","withdrawToken(address,uint256)":"9e281a98"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transferAmount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCustomerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferAmount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Mbazu Ifeanyichukwu Daniel\",\"details\":\"Grandida bank\",\"kind\":\"dev\",\"methods\":{\"getCustomerBalance()\":{\"details\":\"Get balance of customer\"},\"transferToken(address,uint256)\":{\"details\":\"send token to another account from your bank balances\"},\"withdrawToken(address,uint256)\":{\"details\":\"customer withdraw token back to account\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositToken()\":{\"notice\":\"deposit token into the bank\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WealthMate.sol\":\"WealthMate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/WealthMate.sol\":{\"keccak256\":\"0xf82a4eca2f619bcd8ab2143f64b9532c0adb89b073106a8789b05024b685800c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6246ffbb7a5adad6cf47f3ee04602e4bca05a356f06cd3ac65fe30d755b7463c\",\"dweb:/ipfs/QmWV4kxECwdFFd2WTPsZqhZwcMiMs11tjDt4N4PkSUJm2Q\"]}},\"version\":1}"}}}}}